
# Properties for Productive environments

#********************************************************************
# Wrapper Properties
#********************************************************************
# see http://wrapper.tanukisoftware.org/doc/english/props-jvm.html

wrapper.java.command=${java.home}/bin/java

set.CATALINA_HOME=../..
set.CATALINA_BASE=../..
set.ARCH=win32

${tomcat.wrapper.debugjavaoptions}

# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
wrapper.java.classpath.1=%CATALINA_BASE%\bin\%ARCH%\wrapper.jar
wrapper.java.classpath.2=%CATALINA_BASE%\bin\%ARCH%\threaddumpwrapper.jar
wrapper.java.classpath.3=%CATALINA_HOME%\bin\bootstrap.jar
wrapper.java.classpath.4=%CATALINA_HOME%\bin\tomcat-juli.jar

# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=%CATALINA_BASE%\bin\%ARCH%

# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp

# Application parameters.  Add parameters as needed starting from 1
# The first application parameter is the name of the class whose main
# method is to be called when the application is launched.  The class
# name is followed by the number of parameters to be passed to its main
# method.  Then comes the actual parameters.
#wrapper.app.parameter.1=org.apache.catalina.startup.Bootstrap
wrapper.app.parameter.1=net.covalent.tomcat.wrapper.ThreadDumpWrapper
wrapper.app.parameter.2=-config
wrapper.app.parameter.3=conf/server-minimal.xml
wrapper.app.parameter.4=start

wrapper.port.min=${tomcat.wrapper.startport}
wrapper.port.max=${tomcat.wrapper.endport}


#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Format of output for the console.  (See docs for formats)
# (http://wrapper.tanukisoftware.org/doc/english/props-logging.html)

wrapper.debug=false
wrapper.adviser=false
wrapper.java.command.loglevel=DEBUG

wrapper.console.flush=true
wrapper.console.format=M
wrapper.console.loglevel=INFO

wrapper.logfile=${tomcat.wrapper.logfile}
wrapper.logfile.format=LPDZM
wrapper.logfile.loglevel=INFO
wrapper.logfile.maxfiles=365
wrapper.logfile.rollmode=DATE

wrapper.syslog.loglevel=NONE

#********************************************************************
# Wrapper Windows NT/2000/XP Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.
# see http://wrapper.tanukisoftware.org/doc/english/props-nt.html

wrapper.ntservice.name=tcServer ${bundled.tcserver.id}
wrapper.ntservice.displayname=tcServer ${bundled.tcserver.id} ${hybris.build.version}
wrapper.ntservice.description=tcServer ${bundled.tcserver.id} ${hybris.build.version}
wrapper.ntservice.dependency.1=
wrapper.ntservice.starttype=AUTO_START
wrapper.ntservice.interactive=false


#********************************************************************
# Advanced Properties
#********************************************************************

wrapper.java.statusfile=${HYBRIS_DATA_DIR}/${bundled.tcserver.id}.java.status
wrapper.java.idfile=${HYBRIS_DATA_DIR}/${bundled.tcserver.id}.java.id
wrapper.java.pidfile=${HYBRIS_DATA_DIR}/${bundled.tcserver.id}.java.pid
wrapper.lockfile=${HYBRIS_DATA_DIR}/${bundled.tcserver.id}.lock
wrapper.request_thread_dump_on_failed_jvm_exit=true 
wrapper.restart.reload_configuration=true
wrapper.ping.interval=10
wrapper.startup.timeout=90
wrapper.ping.timeout=0
wrapper.shutdown.timeout=180
wrapper.cpu.timeout=90
wrapper.jvm_exit.timeout=60
wrapper.restart.delay=1

#--to restart the server when facing OutOfMemories
# CAUTION: Before activating the feature below, please be sure that you are aware of the potential SECURITY RISKS for your application (see: PLA-10071, ACC-1591)

# wrapper.filter.trigger.1=java.lang.OutOfMemoryError
# wrapper.filter.action.1=RESTART
